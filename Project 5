
#Milestone 1------------------------------------------------------------
# TODO: Write your header comment here.

# TODO: Write your code here.

def open_file(file_name, file_int):
    final_list = []
    if file_name.lower() == "small":
        for i in range(0, 4):
            file_int += 1
            file_str = str(file_int) + '.txt'
            open_file = open(file_str)
            line = open_file.readline()
            final_list.append(line)
    else:
        file_str = str(file_int) + '.txt'
        open_file = open(file_str)
        line = open_file.readline()
        final_list.append(line)
    return final_list


user_file = input()
if user_file.lower() == 'large':
    user_number = int(input())
else:
    user_number = 0

total_list = open_file(user_file, user_number)
if len(total_list) > 1:
    for i in range(len(total_list) - 1):
        print(total_list[i], end='')
    print(total_list[-1])
else:
    print(total_list[0])


#Milestone 2-------------------------------------------------------

# TODO: Write your header comment here.

# TODO: Write your code here.

def open_file(file_name):
    final_list = []
    file_str = str(file_name) + '.txt'
    open_file = open(file_str)
    line = open_file.read()
    return line


user_file = input()

total_list = open_file(user_file)
list_split = total_list.split()

for i in range(0, len(list_split)):
    if i == 0:
        str_split = list_split[i].split(',')
        str_final = str_split.pop(0)
    else:
        name_split = list_split[i].split(',')
        print(name_split[0] + ':', end=' ')
        
        for j in range(1, len(name_split) - 1):        
            print(name_split[j], end=' ')
        print(name_split[-1])
print("STR list:", str_split)


# if len(total_list) > 1:
#     for i in range(len(total_list) - 1):
#         print(total_list[i], end='')
#     print(total_list[-1])
# else:
#     print(total_list[0])

#Milestone 3---------------------------------------------------------------------------------------

# TODO: Write your header comment here.

# TODO: Copy your code from the previous milestones.
# TODO: Write your code here.

def open_file(file_int):
    file_int = int(file_int)
    final_dict = {}
    if file_int in [1, 2, 3, 4]:
        file_str = 'small.txt'
    else:
        file_str = 'large.txt'
    open_file = open(file_str, 'r')
    line = open_file.readlines()
    column = line[0].strip().split(',')
    for line in line[1:]:
        values = line.strip().split(',')
        values_dict = {}
        for i in range(1, len(values)):
            values_dict[column[i]] = int(values[i])
        final_dict[values[0]] = values_dict
    return final_dict

def count_str(sequence, str_sequence):
    count = 0
    index =0
    while index < len(sequence):
        if sequence[index:index + len(str_sequence)] == str_sequence:
            count += 1
            index += len(str_sequence)
        else:
            index += 1
    return count

def match_dna_sequence(file_size, sequence):
    for name, entry in file_size.items():
        match = True
        for str_sequence, str_count in entry.items():
            count = count_str(sequence, str_sequence)
            if count != str_count:
                match = False
                break
        if match:
                return name
    return "No Match."

user_input = input("Enter number (1-20): ")
file_name = f'{user_input}.txt'
file_read = open_file(user_input)
with open(file_name, 'r') as file:
    sequence = file.read().strip()
match = match_dna_sequence(file_read, sequence)
print(f'\nDna Sequence #{user_input} matches: {match}')


#Milestone 4 -------------------------------------------------------------------------------


#This program matches the DNA from files 1-20 and outputing the names of people who it matches it with from 2 different files small.txt and large.txt

def open_file(file_int):  # This funtion opens the small and large files
    final_dict = {}
    if file_int in [1, 2, 3, 4]:
        file_str = 'small.txt'
    else:
        file_str = 'large.txt'
    with open(file_str, 'r') as file:
        line = file.readlines()
        column = line[0].strip().split(',')
        for line in line[1:]:
            values = line.strip().split(',')
            entry = {}
            for i in range(1, len(column)):
                entry[column[i]] = int(values[i])
            final_dict[values[0]] = entry
    return final_dict

def count_str(sequence, str_sequence):  # this function calculates the longest run of consecutives substrings in the DNA strings
    longest_run = 0
    current_run = 0
    index = 0
    while index < len(sequence):
        if sequence[index:index + len(str_sequence)] == str_sequence:
            current_run += 1
            index += len(str_sequence)
            if current_run > longest_run:
                longest_run = current_run
        else:
            current_run = 0
            index += 1
    return longest_run

def match_dna_sequence(sequence, file_read):  # This funtion combines the two files (small or large, 1-20 files) and gives out the name that matches or No Match
    match_name = "No Match."
    max_matches = 0
    for name, values in file_read.items():
        matches = 0
        for str_sequence, str_count in values.items():
            longest_run = count_str(sequence, str_sequence)
            if longest_run == str_count:
                matches += 1
        if matches == len(values):
            if matches > max_matches:
                max_matches = matches
                match_name = name
    return match_name

for user_input in range(1, 21):  #This loops user_input to open all the files from 1-20 and print out the output from match_dna_sequence
    file_name = f'{user_input}.txt'
    file_read = open_file(user_input)
    with open(file_name, 'r') as file:
        sequence = file.read().strip()
    match = match_dna_sequence(sequence, file_read)
    print(f'Dna Sequence #{user_input} matches: {match}')

